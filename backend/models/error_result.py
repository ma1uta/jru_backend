# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from backend.models.base_model_ import Model
from backend import util


class ErrorResult(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, result: str=None, error: str=None):  # noqa: E501
        """ErrorResult - a model defined in Swagger

        :param result: The result of this ErrorResult.  # noqa: E501
        :type result: str
        :param error: The error of this ErrorResult.  # noqa: E501
        :type error: str
        """
        self.swagger_types = {
            'result': str,
            'error': str
        }

        self.attribute_map = {
            'result': 'result',
            'error': 'error'
        }
        self._result = result
        self._error = error

    @classmethod
    def from_dict(cls, dikt) -> 'ErrorResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ErrorResult of this ErrorResult.  # noqa: E501
        :rtype: ErrorResult
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result(self) -> str:
        """Gets the result of this ErrorResult.


        :return: The result of this ErrorResult.
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result: str):
        """Sets the result of this ErrorResult.


        :param result: The result of this ErrorResult.
        :type result: str
        """

        self._result = result

    @property
    def error(self) -> str:
        """Gets the error of this ErrorResult.


        :return: The error of this ErrorResult.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error: str):
        """Sets the error of this ErrorResult.


        :param error: The error of this ErrorResult.
        :type error: str
        """

        self._error = error
